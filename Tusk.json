{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Commpetative cpp template": {
	  "prefix": "cc",
	  "body": [
		"#include<bits/stdc++.h>",
		"using namespace std;",
		"#define gc getchar_unlocked",
		"#define fo(i,n) for(i=0;i<n;i++)",
		"#define Fo(i,k,n) for(i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)",
		"#define pt(a) for (const auto &i : a) { cout << get<0>(i) << get<1>(i) << get<2>(i) << endl; }",
		"#define deb(x) cout << #x << \"=\" << x << endl",
		"#define deb2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl",
		"#define pb push_back",
		"#define ll long long ",
  
		"#define ld long double",
  
		"#define trace1(x)                cerr<<#x<<\": \"<<x<<endl",
		"#define trace2(x, y)             cerr<<#x<<\": \"<<x<<\" | \"<<#y<<\": \"<<y<<endl",
		"#define trace3(x, y, z)          cerr<<#x<<\": \"<<x<<\" | \"<<#y<<\": \"<<y<<\" | \"<<#z<<\": \"<<z<<endl",
		"#define trace4(a, b, c, d)       cerr<<#a<<\": \"<<a<<\" | \"<<#b<<\": \"<<b<<\" | \"<<#c<<\": \"<<c<<\" | \"<<#d<<\": \"<<d<<endl",
		"#define trace5(a, b, c, d, e)    cerr<<#a<<\": \"<<a<<\" | \"<<#b<<\": \"<<b<<\" | \"<<#c<<\": \"<<c<<\" | \"<<#d<<\": \"<<d<<\" | \"<<#e<< \": \"<<e<<endl",
		"#define trace6(a, b, c, d, e, f) cerr<<#a<<\": \"<<a<<\" | \"<<#b<<\": \"<<b<<\" | \"<<#c<<\": \"<<c<<\" | \"<<#d<<\": \"<<d<<\" | \"<<#e<< \": \"<<e<<\" | \"<<#f<<\": \"<<f<<endl",
		"",
  
		"ll gcd(ll a,ll b){if(a==0)return b;return gcd(b%a,a);}",
		"ll lcm(ll a,ll b){return (max(a,b)/gcd(a,b))*min(a,b);}",
		"#define F first",
		"#define S second",
		"#define all(x) x.begin(), x.end()",
		"",
		"#define sortall(x) sort(all(x))",
		"#define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)",
		"#define PI 3.1415926535897932384626",
		"",
		"",
		"",
		"",
		"const int mod = 1'000'000'007;",
		"",
		"//=======================",
		"",
		"",
		"",
		"void solve() {",
		"  int i, j, n, m;",
		"}",
		"",
		"int main() {",
		"    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);",
		"    srand(chrono::high_resolution_clock::now().time_since_epoch().count());",
		"",
		"    int t = 1;",
		"    cin >> t;",
		"    while(t--) {",
		"      solve();",
		"    }",
		"",
		"    return 0;",
		"}",
		"",
		"",
		""
	  ],
	  "description": "Commpetative cpp template"
	},
	"for loop": {
	  "prefix": "fo",
	  "body": ["for(int i=0;i<n;i++)", "{", "}"],
	  "description": "for loop"
	},
	"print tuple": {
	  "prefix": "pt",
	  "body": [
		"   for (const auto &i : eq)",
		"            {",
		"                cout << get<0>(i) << get<1>(i) << get<2>(i) << endl;",
		"            }"
	  ],
	  "description": "print tuple"
	}
  }
  
